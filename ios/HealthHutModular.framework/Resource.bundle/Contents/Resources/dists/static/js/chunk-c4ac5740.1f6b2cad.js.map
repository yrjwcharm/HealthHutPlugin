{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/helper/createSeriesDataSimply.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/processor/negativeDataFilter.js","webpack:///./node_modules/echarts/lib/chart/pie/install.js","webpack:///./node_modules/echarts/lib/label/labelGuideHelper.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/echarts/lib/visual/LegendVisualProvider.js","webpack:///./node_modules/echarts/lib/chart/helper/pieHelper.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js"],"names":["createSeriesDataSimply","seriesModel","opt","nameList","coordDimensions","encodeDefine","getEncode","source","getSource","dimensions","list","initData","PI2","Math","PI","RADIAN","getViewRect","api","getBoxLayoutParams","width","getWidth","height","getHeight","getBasicPieLayout","viewRect","center","get","radius","size","min","cx","x","cy","y","r0","r","pieLayout","seriesType","ecModel","eachSeriesByType","data","getData","valueDim","mapDimension","_a","startAngle","minAngle","validDataCount","each","value","isNaN","sum","getSum","unitRadian","clockwise","roseType","stillShowZeroSum","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","setLayout","idx","angle","setItemLayout","NaN","endAngle","angle_1","layout_1","getItemLayout","layout_2","adjustSingleSide","viewWidth","viewHeight","viewLeft","viewTop","farthestX","length","len","i","position","labelAlignTo","dx","label","linePoints","recalculateX","recalculateXOnSemiToAlignOnEllipseCurve","semi","rB","rB2","item","dy","abs","rA","rA2","sqrt","len2","items","topSemi","maxY","bottomSemi","push","avoidOverlap","labelLayoutList","leftList","rightList","leftmostX","Number","MAX_VALUE","rightmostX","isPositionCenter","max","layout","isAlignToEdge","realTextWidth","rect","targetTextWidth","labelDistance","edgeDistance","bleedMargin","style","dist","sectorShape","pieLabelLayout","hasLabelRotate","minShowLabelRadian","getLayout","setNotShow","el","ignore","isLabelShown","key","states","sector","getItemGraphicEl","shape","getTextContent","labelLine","getTextGuideLine","itemModel","getItemModel","labelModel","getModel","labelPosition","labelLineModel","labelLineLen","labelLineLen2","textX","textY","textAlign","midAngle","nx","cos","ny","sin","labelRotate","isLabelInside","x1","y1","x2","y2","x3","y3","rotate","radialAngle","rotation","setStyle","verticalAlign","align","selectState","select","textRect","getBoundingRect","clone","applyTransform","getComputedTransform","margin","minTurnAngle","maxSurfaceAngle","surfaceNormal","Point","setTextConfig","inside","notShowLabel","setShape","points","__hostTarget","textGuideLineConfig","anchor","_super","PiePiece","_this","call","this","z2","text","setTextContent","updateData","prototype","firstCreate","hostModel","emphasisModel","animationType","getShallow","useStyle","getItemVisual","offset","cursorStyle","attr","_updateLabel","ensureState","labelText","visualColor","fill","visualOpacity","opacity","labelFetcher","labelDataIndex","inheritColor","defaultOpacity","defaultText","getFormattedLabel","getName","removeTextGuideLine","polyline","setTextGuideLine","stroke","PieView","apply","arguments","ignoreLabelLineUpdate","init","sectorGroup","_sectorGroup","render","payload","oldData","_data","group","count","s","_emptyCircleSector","remove","getItemStyle","add","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","off","execute","dispose","containPoint","point","itemLayout","type","Chart","PieSeriesModel","option","legendVisualProvider","LegendVisualProvider","getRawData","_defaultLabelLine","mergeOption","getInitialData","encodeDefaulter","getDataParams","dataIndex","params","valueList","percent","$vars","model","labelLineNormalOpt","labelLineEmphasisOpt","emphasis","show","defaultOption","zlevel","z","legendHoverLink","colorBy","minShowLabelAngle","selectedOffset","percentPrecision","left","top","right","bottom","overflow","alignTo","distanceToLabelLine","length2","smooth","lineStyle","itemStyle","borderWidth","borderJoin","showEmptyCircle","emptyCircleStyle","color","labelLayout","hideOverlap","scale","scaleSize","avoidLabelOverlap","animationDuration","animationTypeUpdate","animationEasingUpdate","animationDurationUpdate","animationEasing","Series","PieSeries","negativeDataFilter","reset","filterSelf","curValue","install","registers","registerChartView","registerSeriesModel","registerAction","registerLayout","registerProcessor","dataFilter","CMD","DEFAULT_SEARCH_SPACE","getCandidateAnchor","pos","distance","outPt","outDir","set","projectPointToArc","anticlockwise","out","d","ox","oy","tmp","atan2","d1","d2","projectPointToLine","limitToEnds","dx1","dy1","lineLen","projectedLen","t","projectPointToRect","tmpPt","nearestPointOnRect","pt","nearestPointOnPath","path","xi","yi","x0","y0","minDist","Infinity","cmd","M","L","C","Q","A","rx","ry","theta","dTheta","_x","R","Z","pt0","pt1","pt2","dir2","updateLabelLinePoints","target","labelGuideConfig","searchSpace","candidates","labelRect","anchorPoint","targetTransform","targetInversedTransform","copy","candidate","scaleAndAdd","transform","boundingRect","toArray","limitTurnAngle","tmpArr","tmpProjPoint","fromArray","sub","len1","angleCos","dot","minTurnAngleCos","tan","limitSurfaceAngle","maxSurfaceAngleCos","HALF_PI","angle2","acos","newAngle","setLabelLineState","stateName","stateModel","isNormal","stateObj","styleObj","getLineStyle","buildLabelLinePath","moveTo","lineTo","moveLen","midPoint0","midPoint2","midPoint1","bezierCurveTo","setLabelLineStyle","targetEl","statesModels","defaultStyle","normalModel","normal","showNormal","labelIgnoreNormal","stateShow","isLabelIgnored","stateProxy","showAbove","labelLineConfig","buildPath","getLabelLineStatesModels","labelLineName","$","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","undefined","FORCED","proto","forced","arg","k","E","n","TypeError","getDataWithEncodedVisual","_getDataWithEncodedVisual","_getRawData","getAllNames","rawData","mapArray","containName","name","indexOfName","dataWithEncodedVisual","getSectorCornerRadius","zeroIfNull","cornerRadius","innerCornerRadius","legendModels","findComponents","mainType","isSelected"],"mappings":"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","file":"static/js/chunk-c4ac5740.1f6b2cad.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions';\nimport SeriesData from '../../data/SeriesData';\nimport { extend, isArray } from 'zrender/lib/core/util';\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n */\n\nexport default function createSeriesDataSimply(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({\n    encodeDefine: seriesModel.getEncode()\n  }, opt);\n  var source = seriesModel.getSource();\n  var dimensions = prepareSeriesDataSchema(source, opt).dimensions;\n  var list = new SeriesData(dimensions, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { parsePercent, linearMap } from '../../util/number';\nimport * as layout from '../../util/layout';\nimport * as zrUtil from 'zrender/lib/core/util';\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nexport function getBasicPieLayout(seriesModel, api) {\n  var viewRect = getViewRect(seriesModel, api);\n  var center = seriesModel.get('center');\n  var radius = seriesModel.get('radius');\n\n  if (!zrUtil.isArray(radius)) {\n    radius = [0, radius];\n  }\n\n  if (!zrUtil.isArray(center)) {\n    center = [center, center];\n  }\n\n  var width = parsePercent(viewRect.width, api.getWidth());\n  var height = parsePercent(viewRect.height, api.getHeight());\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], width) + viewRect.x;\n  var cy = parsePercent(center[1], height) + viewRect.y;\n  var r0 = parsePercent(radius[0], size / 2);\n  var r = parsePercent(radius[1], size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r\n  };\n}\nexport default function pieLayout(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n\n    var _a = getBasicPieLayout(seriesModel, api),\n        cx = _a.cx,\n        cy = _a.cy,\n        r = _a.r,\n        r0 = _a.r0;\n\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.setLayout({\n      viewRect: viewRect,\n      r: r\n    });\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle_1 = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_1 = data.getItemLayout(idx);\n            layout_1.angle = angle_1;\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_2 = data.getItemLayout(idx);\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\n            layout_2.startAngle = currentAngle;\n            layout_2.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nimport { parsePercent } from '../../util/number';\nimport { Point } from '../../util/graphic';\nimport { each } from 'zrender/lib/core/util';\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper';\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper';\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      item.label.x = cx + (dx + item.len2) * dir;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy > semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n\n    if (isPositionCenter(layout)) {\n      continue;\n    }\n\n    var linePoints = layout.linePoints;\n\n    if (linePoints) {\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var realTextWidth = layout.rect.width;\n      var targetTextWidth = void 0;\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      if (targetTextWidth < layout.rect.width) {\n        // TODOTODO\n        // layout.text = textContain.truncateText(layout.text, targetTextWidth, layout.font);\n        layout.label.style.width = targetTextWidth;\n\n        if (layout.labelAlignTo === 'edge') {\n          realTextWidth = targetTextWidth; // realTextWidth = textContain.getWidth(layout.text, layout.font);\n        }\n      }\n\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nexport default function pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      each(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else if (labelPosition === 'center') {\n      labelRotate = 0;\n    } else {\n      var radialAngle = nx < 0 ? -midAngle + Math.PI : -midAngle;\n\n      if (rotate === 'radial' || rotate === true) {\n        labelRotate = radialAngle;\n      } else if (rotate === 'tangential' && labelPosition !== 'outside' && labelPosition !== 'outer') {\n        labelRotate = radialAngle + Math.PI / 2;\n\n        if (labelRotate > Math.PI / 2) {\n          labelRotate -= Math.PI;\n        }\n      } else {\n        labelRotate = 0;\n      }\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        limitTurnAngle(linePoints, layout.minTurnAngle);\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __assign, __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\nimport ChartView from '../../view/Chart';\nimport labelLayout from './labelLayout';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nimport { getSectorCornerRadius } from '../helper/pieHelper';\nimport { saveOldStyle } from '../../animation/basicTrasition';\nimport { getBasicPieLayout } from './pieLayout';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n          if (startAngle != null) {\n            sector.setShape({\n              startAngle: startAngle,\n              endAngle: startAngle\n            });\n            graphic.initProps(sector, {\n              shape: {\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          } else {\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n              shape: {\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          }\n        }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = __assign({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    enableHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.init = function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  };\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as modelUtil from '../../util/model';\nimport { getPercentWithPrecision } from '../../util/number';\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\nimport SeriesModel from '../../model/Series';\n\nvar PieSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(PieSeriesModel, _super);\n\n  function PieSeriesModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n\n    this._defaultLabelLine(option);\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.mergeOption = function () {\n    _super.prototype.mergeOption.apply(this, arguments);\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.getInitialData = function () {\n    return createSeriesDataSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var data = this.getData();\n\n    var params = _super.prototype.getDataParams.call(this, dataIndex); // FIXME toFixed?\n\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  };\n\n  PieSeriesModel.prototype._defaultLabelLine = function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  };\n\n  PieSeriesModel.type = 'series.pie';\n  PieSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    colorBy: 'data',\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // If the angle of a sector less than `minShowLabelAngle`,\n    // the label will not be displayed.\n    minShowLabelAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: null,\n    height: null,\n    label: {\n      // color: 'inherit',\n      // If rotate around circle\n      rotate: 0,\n      show: true,\n      overflow: 'truncate',\n      // 'outer', 'inside', 'center'\n      position: 'outer',\n      // 'none', 'labelLine', 'edge'. Works only when position is 'outer'\n      alignTo: 'none',\n      // Closest distance between label and chart edge.\n      // Works only position is 'outer' and alignTo is 'edge'.\n      edgeDistance: '25%',\n      // Works only position is 'outer' and alignTo is not 'edge'.\n      bleedMargin: 10,\n      // Distance between text and label line.\n      distanceToLabelLine: 5 // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      minTurnAngle: 90,\n      maxSurfaceAngle: 90,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderJoin: 'round'\n    },\n    showEmptyCircle: true,\n    emptyCircleStyle: {\n      color: 'lightgray',\n      opacity: 1\n    },\n    labelLayout: {\n      // Hide the overlapped label.\n      hideOverlap: true\n    },\n    emphasis: {\n      scale: true,\n      scaleSize: 5\n    },\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // Animation type. Valid values: expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    // Animation type when update. Valid values: transition, expansion\n    animationTypeUpdate: 'transition',\n    animationEasingUpdate: 'cubicInOut',\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicInOut'\n  };\n  return PieSeriesModel;\n}(SeriesModel);\n\nexport default PieSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function negativeDataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        // handle negative value condition\n        var valueDim = data.mapDimension('value');\n        var curValue = data.get(valueDim, idx);\n\n        if (typeof curValue === 'number' && !isNaN(curValue) && curValue < 0) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { createLegacyDataSelectAction } from '../../legacy/dataSelectAction';\nimport pieLayout from '../pie/pieLayout';\nimport dataFilter from '../../processor/dataFilter';\nimport { curry } from 'zrender/lib/core/util';\nimport PieView from './PieView';\nimport PieSeriesModel from './PieSeries';\nimport negativeDataFilter from '../../processor/negativeDataFilter';\nexport function install(registers) {\n  registers.registerChartView(PieView);\n  registers.registerSeriesModel(PieSeriesModel);\n  createLegacyDataSelectAction('pie', registers.registerAction);\n  registers.registerLayout(curry(pieLayout, 'pie'));\n  registers.registerProcessor(dataFilter('pie'));\n  registers.registerProcessor(negativeDataFilter('pie'));\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { Point, Path, Polyline } from '../util/graphic';\nimport PathProxy from 'zrender/lib/core/PathProxy';\nimport { normalizeRadian } from 'zrender/lib/contain/util';\nimport { cubicProjectPoint, quadraticProjectPoint } from 'zrender/lib/core/curve';\nimport { defaults, retrieve2 } from 'zrender/lib/core/util';\nimport { invert } from 'zrender/lib/core/matrix';\nimport * as vector from 'zrender/lib/core/vector';\nimport { DISPLAY_STATES, SPECIAL_STATES } from '../util/states';\nvar PI2 = Math.PI * 2;\nvar CMD = PathProxy.CMD;\nvar DEFAULT_SEARCH_SPACE = ['top', 'right', 'bottom', 'left'];\n\nfunction getCandidateAnchor(pos, distance, rect, outPt, outDir) {\n  var width = rect.width;\n  var height = rect.height;\n\n  switch (pos) {\n    case 'top':\n      outPt.set(rect.x + width / 2, rect.y - distance);\n      outDir.set(0, -1);\n      break;\n\n    case 'bottom':\n      outPt.set(rect.x + width / 2, rect.y + height + distance);\n      outDir.set(0, 1);\n      break;\n\n    case 'left':\n      outPt.set(rect.x - distance, rect.y + height / 2);\n      outDir.set(-1, 0);\n      break;\n\n    case 'right':\n      outPt.set(rect.x + width + distance, rect.y + height / 2);\n      outDir.set(1, 0);\n      break;\n  }\n}\n\nfunction projectPointToArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y, out) {\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n  x /= d;\n  y /= d; // Intersect point.\n\n  var ox = x * r + cx;\n  var oy = y * r + cy;\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    out[0] = ox;\n    out[1] = oy;\n    return d - r;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n    // Project point is on the arc.\n    out[0] = ox;\n    out[1] = oy;\n    return d - r;\n  }\n\n  var x1 = r * Math.cos(startAngle) + cx;\n  var y1 = r * Math.sin(startAngle) + cy;\n  var x2 = r * Math.cos(endAngle) + cx;\n  var y2 = r * Math.sin(endAngle) + cy;\n  var d1 = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\n  var d2 = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);\n\n  if (d1 < d2) {\n    out[0] = x1;\n    out[1] = y1;\n    return Math.sqrt(d1);\n  } else {\n    out[0] = x2;\n    out[1] = y2;\n    return Math.sqrt(d2);\n  }\n}\n\nfunction projectPointToLine(x1, y1, x2, y2, x, y, out, limitToEnds) {\n  var dx = x - x1;\n  var dy = y - y1;\n  var dx1 = x2 - x1;\n  var dy1 = y2 - y1;\n  var lineLen = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n  dx1 /= lineLen;\n  dy1 /= lineLen; // dot product\n\n  var projectedLen = dx * dx1 + dy * dy1;\n  var t = projectedLen / lineLen;\n\n  if (limitToEnds) {\n    t = Math.min(Math.max(t, 0), 1);\n  }\n\n  t *= lineLen;\n  var ox = out[0] = x1 + t * dx1;\n  var oy = out[1] = y1 + t * dy1;\n  return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\n}\n\nfunction projectPointToRect(x1, y1, width, height, x, y, out) {\n  if (width < 0) {\n    x1 = x1 + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y1 = y1 + height;\n    height = -height;\n  }\n\n  var x2 = x1 + width;\n  var y2 = y1 + height;\n  var ox = out[0] = Math.min(Math.max(x, x1), x2);\n  var oy = out[1] = Math.min(Math.max(y, y1), y2);\n  return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\n}\n\nvar tmpPt = [];\n\nfunction nearestPointOnRect(pt, rect, out) {\n  var dist = projectPointToRect(rect.x, rect.y, rect.width, rect.height, pt.x, pt.y, tmpPt);\n  out.set(tmpPt[0], tmpPt[1]);\n  return dist;\n}\n/**\n * Calculate min distance corresponding point.\n * This method won't evaluate if point is in the path.\n */\n\n\nfunction nearestPointOnPath(pt, path, out) {\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n  var x1;\n  var y1;\n  var minDist = Infinity;\n  var data = path.data;\n  var x = pt.x;\n  var y = pt.y;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++];\n\n    if (i === 1) {\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    var d = minDist;\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        d = projectPointToLine(xi, yi, data[i], data[i + 1], x, y, tmpPt, true);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        d = cubicProjectPoint(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        d = quadraticProjectPoint(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        i += 1;\n        var anticlockwise = !!(1 - data[i++]);\n        x1 = Math.cos(theta) * rx + cx;\n        y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i <= 1) {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        d = projectPointToArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y, tmpPt);\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        d = projectPointToRect(x0, y0, width, height, x, y, tmpPt);\n        break;\n\n      case CMD.Z:\n        d = projectPointToLine(xi, yi, x0, y0, x, y, tmpPt, true);\n        xi = x0;\n        yi = y0;\n        break;\n    }\n\n    if (d < minDist) {\n      minDist = d;\n      out.set(tmpPt[0], tmpPt[1]);\n    }\n  }\n\n  return minDist;\n} // Temporal varible for intermediate usage.\n\n\nvar pt0 = new Point();\nvar pt1 = new Point();\nvar pt2 = new Point();\nvar dir = new Point();\nvar dir2 = new Point();\n/**\n * Calculate a proper guide line based on the label position and graphic element definition\n * @param label\n * @param labelRect\n * @param target\n * @param targetRect\n */\n\nexport function updateLabelLinePoints(target, labelLineModel) {\n  if (!target) {\n    return;\n  }\n\n  var labelLine = target.getTextGuideLine();\n  var label = target.getTextContent(); // Needs to create text guide in each charts.\n\n  if (!(label && labelLine)) {\n    return;\n  }\n\n  var labelGuideConfig = target.textGuideLineConfig || {};\n  var points = [[0, 0], [0, 0], [0, 0]];\n  var searchSpace = labelGuideConfig.candidates || DEFAULT_SEARCH_SPACE;\n  var labelRect = label.getBoundingRect().clone();\n  labelRect.applyTransform(label.getComputedTransform());\n  var minDist = Infinity;\n  var anchorPoint = labelGuideConfig.anchor;\n  var targetTransform = target.getComputedTransform();\n  var targetInversedTransform = targetTransform && invert([], targetTransform);\n  var len = labelLineModel.get('length2') || 0;\n\n  if (anchorPoint) {\n    pt2.copy(anchorPoint);\n  }\n\n  for (var i = 0; i < searchSpace.length; i++) {\n    var candidate = searchSpace[i];\n    getCandidateAnchor(candidate, 0, labelRect, pt0, dir);\n    Point.scaleAndAdd(pt1, pt0, dir, len); // Transform to target coord space.\n\n    pt1.transform(targetInversedTransform); // Note: getBoundingRect will ensure the `path` being created.\n\n    var boundingRect = target.getBoundingRect();\n    var dist = anchorPoint ? anchorPoint.distance(pt1) : target instanceof Path ? nearestPointOnPath(pt1, target.path, pt2) : nearestPointOnRect(pt1, boundingRect, pt2); // TODO pt2 is in the path\n\n    if (dist < minDist) {\n      minDist = dist; // Transform back to global space.\n\n      pt1.transform(targetTransform);\n      pt2.transform(targetTransform);\n      pt2.toArray(points[0]);\n      pt1.toArray(points[1]);\n      pt0.toArray(points[2]);\n    }\n  }\n\n  limitTurnAngle(points, labelLineModel.get('minTurnAngle'));\n  labelLine.setShape({\n    points: points\n  });\n} // Temporal variable for the limitTurnAngle function\n\nvar tmpArr = [];\nvar tmpProjPoint = new Point();\n/**\n * Reduce the line segment attached to the label to limit the turn angle between two segments.\n * @param linePoints\n * @param minTurnAngle Radian of minimum turn angle. 0 - 180\n */\n\nexport function limitTurnAngle(linePoints, minTurnAngle) {\n  if (!(minTurnAngle <= 180 && minTurnAngle > 0)) {\n    return;\n  }\n\n  minTurnAngle = minTurnAngle / 180 * Math.PI; // The line points can be\n  //      /pt1----pt2 (label)\n  //     /\n  // pt0/\n\n  pt0.fromArray(linePoints[0]);\n  pt1.fromArray(linePoints[1]);\n  pt2.fromArray(linePoints[2]);\n  Point.sub(dir, pt0, pt1);\n  Point.sub(dir2, pt2, pt1);\n  var len1 = dir.len();\n  var len2 = dir2.len();\n\n  if (len1 < 1e-3 || len2 < 1e-3) {\n    return;\n  }\n\n  dir.scale(1 / len1);\n  dir2.scale(1 / len2);\n  var angleCos = dir.dot(dir2);\n  var minTurnAngleCos = Math.cos(minTurnAngle);\n\n  if (minTurnAngleCos < angleCos) {\n    // Smaller than minTurnAngle\n    // Calculate project point of pt0 on pt1-pt2\n    var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\n    tmpProjPoint.fromArray(tmpArr); // Calculate new projected length with limited minTurnAngle and get the new connect point\n\n    tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI - minTurnAngle)); // Limit the new calculated connect point between pt1 and pt2.\n\n    var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\n\n    if (isNaN(t)) {\n      return;\n    }\n\n    if (t < 0) {\n      Point.copy(tmpProjPoint, pt1);\n    } else if (t > 1) {\n      Point.copy(tmpProjPoint, pt2);\n    }\n\n    tmpProjPoint.toArray(linePoints[1]);\n  }\n}\n/**\n * Limit the angle of line and the surface\n * @param maxSurfaceAngle Radian of minimum turn angle. 0 - 180. 0 is same direction to normal. 180 is opposite\n */\n\nexport function limitSurfaceAngle(linePoints, surfaceNormal, maxSurfaceAngle) {\n  if (!(maxSurfaceAngle <= 180 && maxSurfaceAngle > 0)) {\n    return;\n  }\n\n  maxSurfaceAngle = maxSurfaceAngle / 180 * Math.PI;\n  pt0.fromArray(linePoints[0]);\n  pt1.fromArray(linePoints[1]);\n  pt2.fromArray(linePoints[2]);\n  Point.sub(dir, pt1, pt0);\n  Point.sub(dir2, pt2, pt1);\n  var len1 = dir.len();\n  var len2 = dir2.len();\n\n  if (len1 < 1e-3 || len2 < 1e-3) {\n    return;\n  }\n\n  dir.scale(1 / len1);\n  dir2.scale(1 / len2);\n  var angleCos = dir.dot(surfaceNormal);\n  var maxSurfaceAngleCos = Math.cos(maxSurfaceAngle);\n\n  if (angleCos < maxSurfaceAngleCos) {\n    // Calculate project point of pt0 on pt1-pt2\n    var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\n    tmpProjPoint.fromArray(tmpArr);\n    var HALF_PI = Math.PI / 2;\n    var angle2 = Math.acos(dir2.dot(surfaceNormal));\n    var newAngle = HALF_PI + angle2 - maxSurfaceAngle;\n\n    if (newAngle >= HALF_PI) {\n      // parallel\n      Point.copy(tmpProjPoint, pt2);\n    } else {\n      // Calculate new projected length with limited minTurnAngle and get the new connect point\n      tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI / 2 - newAngle)); // Limit the new calculated connect point between pt1 and pt2.\n\n      var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\n\n      if (isNaN(t)) {\n        return;\n      }\n\n      if (t < 0) {\n        Point.copy(tmpProjPoint, pt1);\n      } else if (t > 1) {\n        Point.copy(tmpProjPoint, pt2);\n      }\n    }\n\n    tmpProjPoint.toArray(linePoints[1]);\n  }\n}\n\nfunction setLabelLineState(labelLine, ignore, stateName, stateModel) {\n  var isNormal = stateName === 'normal';\n  var stateObj = isNormal ? labelLine : labelLine.ensureState(stateName); // Make sure display.\n\n  stateObj.ignore = ignore; // Set smooth\n\n  var smooth = stateModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.3;\n  }\n\n  stateObj.shape = stateObj.shape || {};\n\n  if (smooth > 0) {\n    stateObj.shape.smooth = smooth;\n  }\n\n  var styleObj = stateModel.getModel('lineStyle').getLineStyle();\n  isNormal ? labelLine.useStyle(styleObj) : stateObj.style = styleObj;\n}\n\nfunction buildLabelLinePath(path, shape) {\n  var smooth = shape.smooth;\n  var points = shape.points;\n\n  if (!points) {\n    return;\n  }\n\n  path.moveTo(points[0][0], points[0][1]);\n\n  if (smooth > 0 && points.length >= 3) {\n    var len1 = vector.dist(points[0], points[1]);\n    var len2 = vector.dist(points[1], points[2]);\n\n    if (!len1 || !len2) {\n      path.lineTo(points[1][0], points[1][1]);\n      path.lineTo(points[2][0], points[2][1]);\n      return;\n    }\n\n    var moveLen = Math.min(len1, len2) * smooth;\n    var midPoint0 = vector.lerp([], points[1], points[0], moveLen / len1);\n    var midPoint2 = vector.lerp([], points[1], points[2], moveLen / len2);\n    var midPoint1 = vector.lerp([], midPoint0, midPoint2, 0.5);\n    path.bezierCurveTo(midPoint0[0], midPoint0[1], midPoint0[0], midPoint0[1], midPoint1[0], midPoint1[1]);\n    path.bezierCurveTo(midPoint2[0], midPoint2[1], midPoint2[0], midPoint2[1], points[2][0], points[2][1]);\n  } else {\n    for (var i = 1; i < points.length; i++) {\n      path.lineTo(points[i][0], points[i][1]);\n    }\n  }\n}\n/**\n * Create a label line if necessary and set it's style.\n */\n\n\nexport function setLabelLineStyle(targetEl, statesModels, defaultStyle) {\n  var labelLine = targetEl.getTextGuideLine();\n  var label = targetEl.getTextContent();\n\n  if (!label) {\n    // Not show label line if there is no label.\n    if (labelLine) {\n      targetEl.removeTextGuideLine();\n    }\n\n    return;\n  }\n\n  var normalModel = statesModels.normal;\n  var showNormal = normalModel.get('show');\n  var labelIgnoreNormal = label.ignore;\n\n  for (var i = 0; i < DISPLAY_STATES.length; i++) {\n    var stateName = DISPLAY_STATES[i];\n    var stateModel = statesModels[stateName];\n    var isNormal = stateName === 'normal';\n\n    if (stateModel) {\n      var stateShow = stateModel.get('show');\n      var isLabelIgnored = isNormal ? labelIgnoreNormal : retrieve2(label.states[stateName] && label.states[stateName].ignore, labelIgnoreNormal);\n\n      if (isLabelIgnored // Not show when label is not shown in this state.\n      || !retrieve2(stateShow, showNormal) // Use normal state by default if not set.\n      ) {\n          var stateObj = isNormal ? labelLine : labelLine && labelLine.states.normal;\n\n          if (stateObj) {\n            stateObj.ignore = true;\n          }\n\n          continue;\n        } // Create labelLine if not exists\n\n\n      if (!labelLine) {\n        labelLine = new Polyline();\n        targetEl.setTextGuideLine(labelLine); // Reset state of normal because it's new created.\n        // NOTE: NORMAL should always been the first!\n\n        if (!isNormal && (labelIgnoreNormal || !showNormal)) {\n          setLabelLineState(labelLine, true, 'normal', statesModels.normal);\n        } // Use same state proxy.\n\n\n        if (targetEl.stateProxy) {\n          labelLine.stateProxy = targetEl.stateProxy;\n        }\n      }\n\n      setLabelLineState(labelLine, false, stateName, stateModel);\n    }\n  }\n\n  if (labelLine) {\n    defaults(labelLine.style, defaultStyle); // Not fill.\n\n    labelLine.style.fill = null;\n    var showAbove = normalModel.get('showAbove');\n    var labelLineConfig = targetEl.textGuideLineConfig = targetEl.textGuideLineConfig || {};\n    labelLineConfig.showAbove = showAbove || false; // Custom the buildPath.\n\n    labelLine.buildPath = buildLabelLinePath;\n  }\n}\nexport function getLabelLineStatesModels(itemModel, labelLineName) {\n  labelLineName = labelLineName || 'labelLine';\n  var statesModels = {\n    normal: itemModel.getModel(labelLineName)\n  };\n\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\n    var stateName = SPECIAL_STATES[i];\n    statesModels[stateName] = itemModel.getModel([stateName, labelLineName]);\n  }\n\n  return statesModels;\n}","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * LegendVisualProvider is an bridge that pick encoded color from data and\n * provide to the legend component.\n */\nvar LegendVisualProvider =\n/** @class */\nfunction () {\n  function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\n  getDataWithEncodedVisual, // Function to get raw data before filtered.\n  getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n\n  return LegendVisualProvider;\n}();\n\nexport default LegendVisualProvider;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isArray } from 'zrender/lib/core/util';\nimport { parsePercent } from 'zrender/lib/contain/text';\nexport function getSectorCornerRadius(model, shape, zeroIfNull) {\n  var cornerRadius = model.get('borderRadius');\n\n  if (cornerRadius == null) {\n    return zeroIfNull ? {\n      innerCornerRadius: 0,\n      cornerRadius: 0\n    } : null;\n  }\n\n  if (!isArray(cornerRadius)) {\n    cornerRadius = [cornerRadius, cornerRadius];\n  }\n\n  return {\n    innerCornerRadius: parsePercent(cornerRadius[0], shape.r0),\n    cornerRadius: parsePercent(cornerRadius[1], shape.r)\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function dataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          // @ts-ignore FIXME: LegendModel\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}"],"sourceRoot":""}