{"version":3,"sources":["webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/component/legend/installLegendPlain.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/legend/installLegendScroll.js","webpack:///./node_modules/echarts/lib/component/legend/install.js"],"names":["layout","group","componentModel","api","boxLayoutParams","getBoxLayoutParams","padding","get","viewportSize","width","getWidth","height","getHeight","rect","makeBackground","style","getItemStyle","fill","shape","x","y","r","silent","z2","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","call","this","match","error","getDefaultSelectorOptions","ecModel","type","title","getLocaleModel","_super","LegendModel","_this","apply","arguments","layoutMode","ignoreSize","init","option","parentModel","mergeDefaultAndTheme","selected","_updateSelector","mergeOption","selector","item","index","optionUpdated","_updateData","legendData","_data","hasSelected","i","length","name_1","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","isPotential","seriesName","name","push","legendVisualProvider","provider","names","getAllNames","isSeriesFiltered","concat","_availableNames","rawData","dataItem","Model","getData","selectedMode","data","unSelect","toggleSelected","hasOwnProperty","allSelect","inverseSelect","getOrient","dependencies","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","symbolRotate","symbolKeepAspect","inactiveColor","inactiveBorderColor","inactiveBorderWidth","itemStyle","color","opacity","borderCap","borderJoin","borderDashOffset","borderMiterLimit","lineStyle","inactiveWidth","cap","join","dashOffset","miterLimit","textStyle","selectorLabel","fontSize","fontFamily","emphasis","selectorPosition","selectorItemGap","selectorButtonGap","tooltip","Component","curry","each","LegendView","newlineDisabled","add","_contentGroup","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","isFirstRender","resetInner","itemAlign","renderInner","positionInfo","maxSize","mainRect","layoutInner","layoutRect","markRedraw","_backgroundEl","removeAll","remove","contentGroup","legendDrawnMap","selectMode","excludeSeriesId","id","legendItemModel","dataIndex","g","newline","getSeriesByName","lineVisualStyle","getVisual","legendIcon","itemGroup","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","containName","idx","indexOfName","getItemVisual","colorArr","_createSelector","selectorGroup","selectorItem","labelText","verticalAlign","onclick","dispatchAction","labelModel","getModel","emphasisLabelModel","normal","defaultText","itemVisualStyle","drawType","visualDrawType","iconRotate","legendIconType","getLegendStyle","textStyleModel","getLegendIcon","rotate","getDefaultLegendIcon","icon","textX","textAlign","formatter","content","replace","text","getTextColor","hitRect","getBoundingRect","invisible","tooltipModel","graphic","el","itemName","itemTooltipOption","eachChild","child","__legendDataIndex","contentRect","contentPos","selectorRect","selectorPos","orientIdx","wh","hw","yx","Math","max","min","iconType","handleCommonProps","visualStyle","lineWidth","propVal","propName","iconBrushType","lastIndexOf","decal","stroke","legendLineModel","getLineStyle","visualHasBorder","opt","symboType","setStyle","rotation","PI","setOrigin","indexOf","dataName","isUseHoverLayer","emphasisState","list","getZr","storage","getDisplayList","len","states","hoverLayer","legendFilter","legendModels","findComponents","mainType","filterSeries","series","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","installLegendAction","registers","registerAction","install","registerComponentModel","registerComponentView","registerProcessor","PRIORITY","PROCESSOR","SERIES_FILTER","registerSubTypeDefaulter","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","inputPositionParams","mergeAndNormalizeLayoutParams","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","target","raw","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","removeClipPath","__rectSize","self","controllerGroup","pageIconSizeArr","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","font","getFont","xy","processMaxSize","_layoutContentAndController","offset","containerGroup","controllerRect","showController","_showController","containerPos","controllerPos","setPosition","clipShape","setClipPath","attr","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","legendId","key","canJump","childOfName","cursor","pageText","current","total","pageCount","containerRectSize","targetItemIndex","_findTargetItemIndex","children","targetItem","itemCount","pCount","result","pagePrevDataIndex","pageNextDataIndex","targetItemInfo","getItemInfo","s","winStartItemInfo","winEndItemInfo","currItemInfo","e","intersect","itemRect","start","itemInfo","winStart","targetDataIndex","defaultIndex","legendDataIdx","installScrollableLegendAction","subType","query"],"mappings":"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","file":"static/js/chunk-6312b7b8.a14e098b.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// @ts-nocheck\nimport { getLayoutRect, box as layoutBox, positionElement } from '../../util/layout';\nimport * as formatUtil from '../../util/format';\nimport * as graphic from '../../util/graphic';\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\n\nexport function layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\nexport function makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport Model from '../../model/Model';\nimport { isNameSpecified } from '../../util/model';\nimport ComponentModel from '../../model/Component';\n\nvar getDefaultSelectorOptions = function (ecModel, type) {\n  if (type === 'all') {\n    return {\n      type: 'all',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\n    };\n  } else if (type === 'inverse') {\n    return {\n      type: 'inverse',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\n    };\n  }\n};\n\nvar LegendModel =\n/** @class */\nfunction (_super) {\n  __extends(LegendModel, _super);\n\n  function LegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendModel.type;\n    _this.layoutMode = {\n      type: 'box',\n      // legend.width/height are maxWidth/maxHeight actually,\n      // whereas realy width/height is calculated by its content.\n      // (Setting {left: 10, right: 10} does not make sense).\n      // So consider the case:\n      // `setOption({legend: {left: 10});`\n      // then `setOption({legend: {right: 10});`\n      // The previous `left` should be cleared by setting `ignoreSize`.\n      ignoreSize: true\n    };\n    return _this;\n  }\n\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype._updateSelector = function (option) {\n    var selector = option.selector;\n    var ecModel = this.ecModel;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\n      });\n    }\n  };\n\n  LegendModel.prototype.optionUpdated = function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name_1 = legendData[i].get('name');\n\n        if (this.isSelected(name_1)) {\n          // Force to unselect others\n          this.select(name_1);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  };\n\n  LegendModel.prototype._updateData = function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  };\n\n  LegendModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  LegendModel.prototype.select = function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  };\n\n  LegendModel.prototype.unSelect = function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  };\n\n  LegendModel.prototype.toggleSelected = function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  };\n\n  LegendModel.prototype.allSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  };\n\n  LegendModel.prototype.inverseSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  };\n\n  LegendModel.prototype.isSelected = function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  };\n\n  LegendModel.prototype.getOrient = function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  };\n\n  LegendModel.type = 'legend.plain';\n  LegendModel.dependencies = ['series'];\n  LegendModel.defaultOption = {\n    zlevel: 0,\n    z: 4,\n    show: true,\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemGap: 10,\n    itemWidth: 25,\n    itemHeight: 14,\n    symbolRotate: 'inherit',\n    symbolKeepAspect: true,\n    inactiveColor: '#ccc',\n    inactiveBorderColor: '#ccc',\n    inactiveBorderWidth: 'auto',\n    itemStyle: {\n      color: 'inherit',\n      opacity: 'inherit',\n      borderColor: 'inherit',\n      borderWidth: 'auto',\n      borderCap: 'inherit',\n      borderJoin: 'inherit',\n      borderDashOffset: 'inherit',\n      borderMiterLimit: 'inherit'\n    },\n    lineStyle: {\n      width: 'auto',\n      color: 'inherit',\n      inactiveColor: '#ccc',\n      inactiveWidth: 2,\n      opacity: 'inherit',\n      type: 'inherit',\n      cap: 'inherit',\n      join: 'inherit',\n      dashOffset: 'inherit',\n      miterLimit: 'inherit'\n    },\n    textStyle: {\n      color: '#333'\n    },\n    selectedMode: true,\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    tooltip: {\n      show: false\n    }\n  };\n  return LegendModel;\n}(ComponentModel);\n\nexport default LegendModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { parse, stringify } from 'zrender/lib/tool/color';\nimport * as graphic from '../../util/graphic';\nimport { enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle';\nimport { makeBackground } from '../helper/listComponent';\nimport * as layoutUtil from '../../util/layout';\nimport ComponentView from '../../view/Component';\nimport { createSymbol } from '../../util/symbol';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar LegendView =\n/** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style.fill = stringify(colorArr, 'rgba');\n            }\n\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n\n    if (typeof seriesModel.getLegendIcon === 'function' && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } //Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\n\nfunction getLegendStyle(iconType, legendModel, lineVisualStyle, itemVisualStyle, drawType, isSelected) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  } // itemStyle\n\n\n  var legendItemModel = legendModel.getModel('itemStyle');\n  var itemStyle = legendItemModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  itemStyle.decal = itemVisualStyle.decal;\n\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\n\n  var legendLineModel = legendModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n\n  if (!isSelected) {\n    var borderWidth = legendModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendModel.get('inactiveColor');\n    itemStyle.stroke = legendModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\n\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n\n  return icon;\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO higlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n\n  return emphasisState && emphasisState.hoverLayer;\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nexport default LegendView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function legendFilter(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// @ts-nocheck\nimport { curry, each } from 'zrender/lib/core/util';\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\n    selected: selectedMap\n  } : {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n\nexport function installLegendAction(registers) {\n  /**\n   * @event legendToggleSelect\n   * @type {Object}\n   * @property {string} type 'legendToggleSelect'\n   * @property {string} [from]\n   * @property {string} name Series name or data item name\n   */\n  registers.registerAction('legendToggleSelect', 'legendselectchanged', curry(legendSelectActionHandler, 'toggleSelected'));\n  registers.registerAction('legendAllSelect', 'legendselectall', curry(legendSelectActionHandler, 'allSelect'));\n  registers.registerAction('legendInverseSelect', 'legendinverseselect', curry(legendSelectActionHandler, 'inverseSelect'));\n  /**\n   * @event legendSelect\n   * @type {Object}\n   * @property {string} type 'legendSelect'\n   * @property {string} name Series name or data item name\n   */\n\n  registers.registerAction('legendSelect', 'legendselected', curry(legendSelectActionHandler, 'select'));\n  /**\n   * @event legendUnSelect\n   * @type {Object}\n   * @property {string} type 'legendUnSelect'\n   * @property {string} name Series name or data item name\n   */\n\n  registers.registerAction('legendUnSelect', 'legendunselected', curry(legendSelectActionHandler, 'unSelect'));\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport LegendModel from './LegendModel';\nimport LegendView from './LegendView';\nimport legendFilter from './legendFilter';\nimport { installLegendAction } from './legendAction';\nexport function install(registers) {\n  registers.registerComponentModel(LegendModel);\n  registers.registerComponentView(LegendView);\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\n  registers.registerSubTypeDefaulter('legend', function () {\n    return 'plain';\n  });\n  installLegendAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport LegendModel from './LegendModel';\nimport { mergeLayoutParam, getLayoutParams } from '../../util/layout';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar ScrollableLegendModel =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableLegendModel, _super);\n\n  function ScrollableLegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScrollableLegendModel.type;\n    return _this;\n  }\n  /**\n   * @param {number} scrollDataIndex\n   */\n\n\n  ScrollableLegendModel.prototype.setScrollDataIndex = function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  };\n\n  ScrollableLegendModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputPositionParams = getLayoutParams(option);\n\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  };\n\n  ScrollableLegendModel.type = 'legend.scroll';\n  ScrollableLegendModel.defaultOption = inheritDefaultOption(LegendModel.defaultOption, {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    pageFormatter: '{current}/{total}',\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  });\n  return ScrollableLegendModel;\n}(LegendModel);\n\n; // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: !!ignoreSize\n  });\n}\n\nexport default ScrollableLegendModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport LegendView from './LegendView';\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\n\nvar ScrollableLegendView =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableLegendView, _super);\n\n  function ScrollableLegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScrollableLegendView.type;\n    _this.newlineDisabled = true;\n    _this._currentIndex = 0;\n    return _this;\n  }\n\n  ScrollableLegendView.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n\n    this.group.add(this._controllerGroup = new Group());\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.resetInner = function () {\n    _super.prototype.resetInner.call(this);\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var self = this; // Render content items.\n\n    _super.prototype.renderInner.call(this, itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n\n    var pageIconSize = legendModel.get('pageIconSize', true);\n    var pageIconSizeArr = zrUtil.isArray(pageIconSize) ? pageIconSize : [pageIconSize, pageIconSize];\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        // Placeholder to calculate a proper layout.\n        text: 'xx/xx',\n        fill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        verticalAlign: 'middle',\n        align: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(self._pageGo, self, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSizeArr[0] / 2,\n        y: -pageIconSizeArr[1] / 2,\n        width: pageIconSizeArr[0],\n        height: pageIconSizeArr[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx];\n    selector && layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n    var selectorRect = selectorGroup.getBoundingRect();\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\n    var processMaxSize = zrUtil.clone(maxSize);\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\n\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx, xy);\n\n    if (selector) {\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\n      } else {\n        var offset = selectorRect[wh] + selectorButtonGap;\n        selectorPos[orientIdx] -= offset;\n        mainRect[xy] -= offset;\n      }\n\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      selectorGroup.markRedraw();\n    }\n\n    return mainRect;\n  };\n\n  ScrollableLegendView.prototype._layoutContentAndController = function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx, xy) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh]; // In case that the inner elements of contentGroup layout do not based on [0, 0]\n\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup[xy];\n    } // Layout container group based on 0.\n\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.setPosition(contentPos);\n    containerGroup.setPosition(containerPos);\n    controllerGroup.setPosition(controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as placeholders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      x: pageInfo.contentPosition[0],\n      y: pageInfo.contentPosition[1]\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird effect.\n    showController ? legendModel : null);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  };\n\n  ScrollableLegendView.prototype._pageGo = function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  };\n\n  ScrollableLegendView.prototype._updatePageInfoView = function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var key = name + 'DataIndex';\n      var canJump = pageInfo[key] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current == null ? '' : current + '').replace('{total}', total == null ? '' : total + '') : pageFormatter({\n      current: current,\n      total: total\n    }));\n  };\n  /**\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no previous page.\n   *  pageNextDataIndex: number, null when no next page.\n   * }\n   */\n\n\n  ScrollableLegendView.prototype._getPageInfo = function (legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: [contentGroup.x, contentGroup.y],\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n\n    if (!targetItem) {\n      return result;\n    }\n\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n\n          ++result.pageCount;\n        }\n      }\n\n      winEndItemInfo = currItemInfo;\n    }\n\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\n      winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n\n      winStartItemInfo = currItemInfo;\n    }\n\n    return result;\n\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el[xy];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  };\n\n  ScrollableLegendView.prototype._findTargetItemIndex = function (targetDataIndex) {\n    if (!this._showController) {\n      return 0;\n    }\n\n    var index;\n    var contentGroup = this.getContentGroup();\n    var defaultIndex;\n    contentGroup.eachChild(function (child, idx) {\n      var legendDataIdx = child.__legendDataIndex; // FIXME\n      // If the given targetDataIndex (from model) is illegal,\n      // we use defaultIndex. But the index on the legend model and\n      // action payload is still illegal. That case will not be\n      // changed until some scenario requires.\n\n      if (defaultIndex == null && legendDataIdx != null) {\n        defaultIndex = idx;\n      }\n\n      if (legendDataIdx === targetDataIndex) {\n        index = idx;\n      }\n    });\n    return index != null ? index : defaultIndex;\n  };\n\n  ScrollableLegendView.type = 'legend.scroll';\n  return ScrollableLegendView;\n}(LegendView);\n\nexport default ScrollableLegendView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function installScrollableLegendAction(registers) {\n  /**\n   * @event legendScroll\n   * @type {Object}\n   * @property {string} type 'legendScroll'\n   * @property {string} scrollDataIndex\n   */\n  registers.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n    var scrollDataIndex = payload.scrollDataIndex;\n    scrollDataIndex != null && ecModel.eachComponent({\n      mainType: 'legend',\n      subType: 'scroll',\n      query: payload\n    }, function (legendModel) {\n      legendModel.setScrollDataIndex(scrollDataIndex);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension';\nimport { install as installLegendPlain } from './installLegendPlain';\nimport ScrollableLegendModel from './ScrollableLegendModel';\nimport ScrollableLegendView from './ScrollableLegendView';\nimport installScrollableLegendAction from './scrollableLegendAction';\nexport function install(registers) {\n  use(installLegendPlain);\n  registers.registerComponentModel(ScrollableLegendModel);\n  registers.registerComponentView(ScrollableLegendView);\n  installScrollableLegendAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension';\nimport { install as installLegendPlain } from './installLegendPlain';\nimport { install as installLegendScroll } from './installLegendScroll';\nexport function install(registers) {\n  use(installLegendPlain);\n  use(installLegendScroll);\n}"],"sourceRoot":""}